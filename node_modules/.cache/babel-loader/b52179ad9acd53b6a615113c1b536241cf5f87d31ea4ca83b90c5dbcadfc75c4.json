{"ast":null,"code":"var _jsxFileName = \"/home/sqjl/tunepani/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\n/**\n * Drum component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drum({\n  drum,\n  toggleNote,\n  updateDrumPosition,\n  onDragStart,\n  onDragStop\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startMouse, setStartMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const containerRef = useRef(null);\n  const handleMouseDown = e => {\n    // Only respond to left click\n    if (e.button !== 0) return;\n    setDragging(true);\n    onDragStart(); // Inform parent that we’re dragging\n    // Store the mouse position and the drum’s current (x,y)\n    setStartMouse({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setStartPos({\n      x: drum.x,\n      y: drum.y\n    });\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    // Continuously update the drum’s position\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, null, false);\n  };\n  const handleMouseUp = e => {\n    var _containerRef$current;\n    if (!dragging) return;\n    setDragging(false);\n    onDragStop(); // Inform parent we stopped dragging\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n\n    // Get final bounding rect for collision check\n    const rect = ((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect()) || null;\n    // Finalize position\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, rect, true);\n  };\n\n  // Listen on document so dragging continues if mouse leaves the element\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    } else {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [dragging, startMouse, startPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"drum-container\",\n    style: {\n      position: \"absolute\",\n      left: drum.x,\n      top: drum.y,\n      width: \"60px\",\n      height: \"60px\",\n      cursor: dragging ? \"grabbing\" : \"grab\"\n    },\n    onMouseDown: handleMouseDown,\n    onClick: () => {\n      // Avoid toggling note if the user just dragged\n      if (!dragging) toggleNote(drum);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drum-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drum-circle\",\n        children: drum.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Main Tunepani app\n */\n_s(Drum, \"RubhsumlBOkV4vqw2a/lcLWbzwY=\");\n_c = Drum;\nfunction Tunepani() {\n  _s2();\n  // Start with no drums\n  const [drums, setDrums] = useState([]);\n  const [pitch, setPitch] = useState(0);\n  const [closestNote, setClosestNote] = useState(\"\");\n  const [volume, setVolume] = useState(0.3);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [savedConfigs, setSavedConfigs] = useState([]);\n  const [configName, setConfigName] = useState(\"\");\n\n  // Track whether *any* drum is being dragged\n  const [isDragging, setIsDragging] = useState(false);\n  const audioContextRef = useRef(null);\n  const oscillatorsRef = useRef({});\n  const analyserRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const trashBinRef = useRef(null);\n\n  // A few sample notes/frequencies (expand as needed)\n  const notes = [\"E3\", \"G4\", \"B4\", \"E4\", \"A3\", \"C4\"];\n  const frequencies = {\n    E3: 164.81,\n    G4: 392.0,\n    B4: 493.88,\n    E4: 329.63,\n    A3: 220.0,\n    C4: 261.63\n  };\n  useEffect(() => {\n    // Optional: Microphone pitch detection\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const audioContext = audioContextRef.current;\n      analyserRef.current = audioContext.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      microphoneRef.current = audioContext.createMediaStreamSource(stream);\n      microphoneRef.current.connect(analyserRef.current);\n      detectPitch();\n    }).catch(error => console.error(\"Microphone access error:\", error));\n\n    // Load saved configs from localStorage\n    const configs = JSON.parse(localStorage.getItem(\"tunepaniConfigs\")) || [];\n    setSavedConfigs(configs);\n  }, []);\n  const detectPitch = () => {\n    const analyser = analyserRef.current;\n    if (!analyser) return;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const processPitch = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const maxVal = Math.max(...dataArray);\n      const maxIndex = dataArray.indexOf(maxVal);\n      const frequency = maxIndex * (audioContextRef.current.sampleRate / analyser.fftSize);\n      setPitch(frequency);\n      setClosestNote(findClosestNote(frequency));\n      requestAnimationFrame(processPitch);\n    };\n    processPitch();\n  };\n  const findClosestNote = frequency => {\n    if (!frequency || frequency <= 0) return \"\";\n    return Object.keys(frequencies).reduce((closest, note) => Math.abs(frequencies[note] - frequency) < Math.abs(frequencies[closest] - frequency) ? note : closest);\n  };\n\n  /**\n   * Add a new drum at a default position\n   */\n  const addDrum = () => {\n    const newDrum = {\n      id: Date.now(),\n      note: \"E3\",\n      x: 200,\n      // place it somewhere near center\n      y: 200\n    };\n    setDrums(prev => [...prev, newDrum]);\n  };\n\n  /**\n   * Remove a drum from state\n   */\n  const removeDrum = drumId => {\n    setDrums(prev => prev.filter(drum => drum.id !== drumId));\n    if (oscillatorsRef.current[drumId]) {\n      try {\n        oscillatorsRef.current[drumId].oscillator.stop(audioContextRef.current.currentTime);\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drumId];\n    }\n  };\n\n  /**\n   * Toggle a note on/off\n   */\n  const toggleNote = drum => {\n    if (!frequencies[drum.note]) return;\n    const audioContext = audioContextRef.current;\n    if ((audioContext === null || audioContext === void 0 ? void 0 : audioContext.state) === \"suspended\") {\n      audioContext.resume();\n    }\n    if (oscillatorsRef.current[drum.id]) {\n      // Stop playing\n      try {\n        oscillatorsRef.current[drum.id].oscillator.stop(audioContext.currentTime);\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drum.id];\n    } else {\n      // Start playing\n      const freq = frequencies[drum.note];\n      if (!isFinite(freq)) return;\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.type = \"sine\";\n      oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n      gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n      oscillator.connect(gainNode).connect(audioContext.destination);\n      oscillator.start();\n      oscillatorsRef.current[drum.id] = {\n        oscillator,\n        gainNode\n      };\n    }\n  };\n\n  /**\n   * Update a drum’s position\n   */\n  const updateDrumPosition = (drumId, x, y, rect, final) => {\n    if (isNaN(x) || isNaN(y)) return;\n    if (final && trashBinRef.current && rect) {\n      const trashRect = trashBinRef.current.getBoundingClientRect();\n      // Overlap check\n      if (rect.right > trashRect.left && rect.left < trashRect.right && rect.bottom > trashRect.top && rect.top < trashRect.bottom) {\n        removeDrum(drumId);\n        return;\n      }\n    }\n    setDrums(prev => prev.map(d => d.id === drumId ? {\n      ...d,\n      x,\n      y\n    } : d));\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    // Update all active oscillators\n    Object.values(oscillatorsRef.current).forEach(({\n      gainNode\n    }) => gainNode.gain.setValueAtTime(newVolume, audioContextRef.current.currentTime));\n  };\n\n  // Save/Load config logic\n  const saveConfiguration = () => {\n    const name = configName.trim() || \"Untitled Piece\";\n    const newConfig = {\n      id: Date.now(),\n      name,\n      drums\n    };\n    const updatedConfigs = [...savedConfigs, newConfig];\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n    setConfigName(\"\");\n  };\n  const loadConfiguration = config => {\n    setDrums(config.drums);\n    setMenuOpen(false);\n  };\n  const deleteConfiguration = configId => {\n    const updatedConfigs = savedConfigs.filter(c => c.id !== configId);\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n  };\n  const handleConfigNameChange = e => setConfigName(e.target.value);\n\n  // Called by each Drum when it starts/stops dragging\n  const onDragStart = () => setIsDragging(true);\n  const onDragStop = () => setIsDragging(false);\n\n  // Pitch gauge\n  let markerLeft = 100;\n  let gaugeNote = \"\";\n  if (pitch > 0 && closestNote) {\n    const ideal = frequencies[closestNote];\n    if (ideal) {\n      let cents = 1200 * Math.log2(pitch / ideal);\n      cents = Math.max(-50, Math.min(50, cents));\n      markerLeft = 100 + cents / 50 * 100;\n      gaugeNote = closestNote;\n    }\n  }\n  const closeMenu = () => setMenuOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Tunepani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-drum-icon\",\n        onClick: addDrum,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: closeMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 20\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Save Piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Piece Name\",\n        value: configName,\n        onChange: handleConfigNameChange,\n        className: \"config-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"config-button\",\n        onClick: saveConfiguration,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pieces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"config-list\",\n        children: savedConfigs.map(config => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-button\",\n            onClick: () => loadConfiguration(config),\n            children: config.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"config-delete\",\n            onClick: () => deleteConfiguration(config.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, config.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-sidebar\",\n        onClick: () => setMenuOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drum-area\",\n      children: drums.map(drum => /*#__PURE__*/_jsxDEV(Drum, {\n        drum: drum,\n        toggleNote: toggleNote,\n        updateDrumPosition: updateDrumPosition,\n        onDragStart: onDragStart,\n        onDragStop: onDragStop\n      }, drum.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), isDragging && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-bin\",\n      ref: trashBinRef,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"trash-icon\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-label\",\n          children: \"Flat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gauge-marker\",\n            style: {\n              left: markerLeft + \"px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-label\",\n          children: \"Sharp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-note\",\n        children: [\"Detected Note: \", gaugeNote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"volume-slider\",\n          children: \"Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"volume-slider\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n_s2(Tunepani, \"w/qwWMNfmL50bgjLww2xQmRONbs=\");\n_c2 = Tunepani;\nexport default Tunepani;\nvar _c, _c2;\n$RefreshReg$(_c, \"Drum\");\n$RefreshReg$(_c2, \"Tunepani\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Drum","drum","toggleNote","updateDrumPosition","onDragStart","onDragStop","_s","dragging","setDragging","startMouse","setStartMouse","x","y","startPos","setStartPos","containerRef","handleMouseDown","e","button","clientX","clientY","preventDefault","handleMouseMove","dx","dy","id","handleMouseUp","_containerRef$current","rect","current","getBoundingClientRect","document","addEventListener","removeEventListener","ref","className","style","position","left","top","width","height","cursor","onMouseDown","onClick","children","note","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tunepani","_s2","drums","setDrums","pitch","setPitch","closestNote","setClosestNote","volume","setVolume","menuOpen","setMenuOpen","savedConfigs","setSavedConfigs","configName","setConfigName","isDragging","setIsDragging","audioContextRef","oscillatorsRef","analyserRef","microphoneRef","trashBinRef","notes","frequencies","E3","G4","B4","E4","A3","C4","navigator","mediaDevices","getUserMedia","audio","then","stream","window","AudioContext","webkitAudioContext","audioContext","createAnalyser","fftSize","createMediaStreamSource","connect","detectPitch","catch","error","console","configs","JSON","parse","localStorage","getItem","analyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","processPitch","getByteFrequencyData","maxVal","Math","max","maxIndex","indexOf","frequency","sampleRate","findClosestNote","requestAnimationFrame","Object","keys","reduce","closest","abs","addDrum","newDrum","Date","now","prev","removeDrum","drumId","filter","oscillator","stop","currentTime","state","resume","freq","isFinite","createOscillator","gainNode","createGain","type","setValueAtTime","gain","destination","start","final","isNaN","trashRect","right","bottom","map","d","handleVolumeChange","newVolume","parseFloat","target","value","values","forEach","saveConfiguration","name","trim","newConfig","updatedConfigs","setItem","stringify","loadConfiguration","config","deleteConfiguration","configId","c","handleConfigNameChange","markerLeft","gaugeNote","ideal","cents","log2","min","closeMenu","placeholder","onChange","htmlFor","step","_c2","$RefreshReg$"],"sources":["/home/sqjl/tunepani/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\n/**\n * Drum component\n */\nfunction Drum({ drum, toggleNote, updateDrumPosition, onDragStart, onDragStop }) {\n  const [dragging, setDragging] = useState(false);\n  const [startMouse, setStartMouse] = useState({ x: 0, y: 0 });\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n  const containerRef = useRef(null);\n\n  const handleMouseDown = (e) => {\n    // Only respond to left click\n    if (e.button !== 0) return;\n    setDragging(true);\n    onDragStart(); // Inform parent that we’re dragging\n    // Store the mouse position and the drum’s current (x,y)\n    setStartMouse({ x: e.clientX, y: e.clientY });\n    setStartPos({ x: drum.x, y: drum.y });\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    // Continuously update the drum’s position\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, null, false);\n  };\n\n  const handleMouseUp = (e) => {\n    if (!dragging) return;\n    setDragging(false);\n    onDragStop(); // Inform parent we stopped dragging\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n\n    // Get final bounding rect for collision check\n    const rect = containerRef.current?.getBoundingClientRect() || null;\n    // Finalize position\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, rect, true);\n  };\n\n  // Listen on document so dragging continues if mouse leaves the element\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    } else {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [dragging, startMouse, startPos]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"drum-container\"\n      style={{\n        position: \"absolute\",\n        left: drum.x,\n        top: drum.y,\n        width: \"60px\",\n        height: \"60px\",\n        cursor: dragging ? \"grabbing\" : \"grab\",\n      }}\n      onMouseDown={handleMouseDown}\n      onClick={() => {\n        // Avoid toggling note if the user just dragged\n        if (!dragging) toggleNote(drum);\n      }}\n    >\n      <div className=\"drum-button\">\n        <div className=\"drum-circle\">{drum.note}</div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Main Tunepani app\n */\nfunction Tunepani() {\n  // Start with no drums\n  const [drums, setDrums] = useState([]);\n\n  const [pitch, setPitch] = useState(0);\n  const [closestNote, setClosestNote] = useState(\"\");\n  const [volume, setVolume] = useState(0.3);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [savedConfigs, setSavedConfigs] = useState([]);\n  const [configName, setConfigName] = useState(\"\");\n\n  // Track whether *any* drum is being dragged\n  const [isDragging, setIsDragging] = useState(false);\n\n  const audioContextRef = useRef(null);\n  const oscillatorsRef = useRef({});\n  const analyserRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const trashBinRef = useRef(null);\n\n  // A few sample notes/frequencies (expand as needed)\n  const notes = [\"E3\", \"G4\", \"B4\", \"E4\", \"A3\", \"C4\"];\n  const frequencies = {\n    E3: 164.81,\n    G4: 392.0,\n    B4: 493.88,\n    E4: 329.63,\n    A3: 220.0,\n    C4: 261.63,\n  };\n\n  useEffect(() => {\n    // Optional: Microphone pitch detection\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        if (!audioContextRef.current) {\n          audioContextRef.current =\n            new (window.AudioContext || window.webkitAudioContext)();\n        }\n        const audioContext = audioContextRef.current;\n        analyserRef.current = audioContext.createAnalyser();\n        analyserRef.current.fftSize = 2048;\n        microphoneRef.current = audioContext.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n        detectPitch();\n      })\n      .catch((error) => console.error(\"Microphone access error:\", error));\n\n    // Load saved configs from localStorage\n    const configs = JSON.parse(localStorage.getItem(\"tunepaniConfigs\")) || [];\n    setSavedConfigs(configs);\n  }, []);\n\n  const detectPitch = () => {\n    const analyser = analyserRef.current;\n    if (!analyser) return;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const processPitch = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const maxVal = Math.max(...dataArray);\n      const maxIndex = dataArray.indexOf(maxVal);\n      const frequency =\n        maxIndex * (audioContextRef.current.sampleRate / analyser.fftSize);\n      setPitch(frequency);\n      setClosestNote(findClosestNote(frequency));\n      requestAnimationFrame(processPitch);\n    };\n    processPitch();\n  };\n\n  const findClosestNote = (frequency) => {\n    if (!frequency || frequency <= 0) return \"\";\n    return Object.keys(frequencies).reduce((closest, note) =>\n      Math.abs(frequencies[note] - frequency) <\n      Math.abs(frequencies[closest] - frequency)\n        ? note\n        : closest\n    );\n  };\n\n  /**\n   * Add a new drum at a default position\n   */\n  const addDrum = () => {\n    const newDrum = {\n      id: Date.now(),\n      note: \"E3\",\n      x: 200, // place it somewhere near center\n      y: 200,\n    };\n    setDrums((prev) => [...prev, newDrum]);\n  };\n\n  /**\n   * Remove a drum from state\n   */\n  const removeDrum = (drumId) => {\n    setDrums((prev) => prev.filter((drum) => drum.id !== drumId));\n    if (oscillatorsRef.current[drumId]) {\n      try {\n        oscillatorsRef.current[drumId].oscillator.stop(\n          audioContextRef.current.currentTime\n        );\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drumId];\n    }\n  };\n\n  /**\n   * Toggle a note on/off\n   */\n  const toggleNote = (drum) => {\n    if (!frequencies[drum.note]) return;\n    const audioContext = audioContextRef.current;\n    if (audioContext?.state === \"suspended\") {\n      audioContext.resume();\n    }\n    if (oscillatorsRef.current[drum.id]) {\n      // Stop playing\n      try {\n        oscillatorsRef.current[drum.id].oscillator.stop(\n          audioContext.currentTime\n        );\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drum.id];\n    } else {\n      // Start playing\n      const freq = frequencies[drum.note];\n      if (!isFinite(freq)) return;\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.type = \"sine\";\n      oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n      gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n      oscillator.connect(gainNode).connect(audioContext.destination);\n      oscillator.start();\n      oscillatorsRef.current[drum.id] = { oscillator, gainNode };\n    }\n  };\n\n  /**\n   * Update a drum’s position\n   */\n  const updateDrumPosition = (drumId, x, y, rect, final) => {\n    if (isNaN(x) || isNaN(y)) return;\n    if (final && trashBinRef.current && rect) {\n      const trashRect = trashBinRef.current.getBoundingClientRect();\n      // Overlap check\n      if (\n        rect.right > trashRect.left &&\n        rect.left < trashRect.right &&\n        rect.bottom > trashRect.top &&\n        rect.top < trashRect.bottom\n      ) {\n        removeDrum(drumId);\n        return;\n      }\n    }\n    setDrums((prev) =>\n      prev.map((d) => (d.id === drumId ? { ...d, x, y } : d))\n    );\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    // Update all active oscillators\n    Object.values(oscillatorsRef.current).forEach(({ gainNode }) =>\n      gainNode.gain.setValueAtTime(newVolume, audioContextRef.current.currentTime)\n    );\n  };\n\n  // Save/Load config logic\n  const saveConfiguration = () => {\n    const name = configName.trim() || \"Untitled Piece\";\n    const newConfig = { id: Date.now(), name, drums };\n    const updatedConfigs = [...savedConfigs, newConfig];\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n    setConfigName(\"\");\n  };\n\n  const loadConfiguration = (config) => {\n    setDrums(config.drums);\n    setMenuOpen(false);\n  };\n\n  const deleteConfiguration = (configId) => {\n    const updatedConfigs = savedConfigs.filter((c) => c.id !== configId);\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n  };\n\n  const handleConfigNameChange = (e) => setConfigName(e.target.value);\n\n  // Called by each Drum when it starts/stops dragging\n  const onDragStart = () => setIsDragging(true);\n  const onDragStop = () => setIsDragging(false);\n\n  // Pitch gauge\n  let markerLeft = 100;\n  let gaugeNote = \"\";\n  if (pitch > 0 && closestNote) {\n    const ideal = frequencies[closestNote];\n    if (ideal) {\n      let cents = 1200 * Math.log2(pitch / ideal);\n      cents = Math.max(-50, Math.min(50, cents));\n      markerLeft = 100 + (cents / 50) * 100;\n      gaugeNote = closestNote;\n    }\n  }\n\n  const closeMenu = () => setMenuOpen(false);\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <button className=\"menu-button\" onClick={() => setMenuOpen(!menuOpen)}>\n          ☰\n        </button>\n        <h1 className=\"title\">Tunepani</h1>\n        {/* Add Drum button in top-right */}\n        <button className=\"add-drum-icon\" onClick={addDrum}>\n          +\n        </button>\n      </header>\n\n      {menuOpen && <div className=\"overlay\" onClick={closeMenu}></div>}\n\n      {menuOpen && (\n        <aside className=\"sidebar\">\n          <h3>Save Piece</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Piece Name\"\n            value={configName}\n            onChange={handleConfigNameChange}\n            className=\"config-input\"\n          />\n          <button className=\"config-button\" onClick={saveConfiguration}>\n            Save\n          </button>\n          <h3>Pieces</h3>\n          <ul className=\"config-list\">\n            {savedConfigs.map((config) => (\n              <li key={config.id}>\n                <button\n                  className=\"load-button\"\n                  onClick={() => loadConfiguration(config)}\n                >\n                  {config.name}\n                </button>\n                <span\n                  className=\"config-delete\"\n                  onClick={() => deleteConfiguration(config.id)}\n                >\n                  x\n                </span>\n              </li>\n            ))}\n          </ul>\n          <button className=\"close-sidebar\" onClick={() => setMenuOpen(false)}>\n            Close\n          </button>\n        </aside>\n      )}\n\n      {/* Drum area */}\n      <div className=\"drum-area\">\n        {drums.map((drum) => (\n          <Drum\n            key={drum.id}\n            drum={drum}\n            toggleNote={toggleNote}\n            updateDrumPosition={updateDrumPosition}\n            onDragStart={onDragStart}\n            onDragStop={onDragStop}\n          />\n        ))}\n      </div>\n\n      {/* Show trash bin ONLY if isDragging */}\n      {isDragging && (\n        <div className=\"trash-bin\" ref={trashBinRef}>\n          <span className=\"trash-icon\">🗑️</span>\n        </div>\n      )}\n\n      <main className=\"main-content\">\n        <div className=\"gauge-container\">\n          <span className=\"gauge-label\">Flat</span>\n          <div className=\"gauge\">\n            <div\n              className=\"gauge-marker\"\n              style={{ left: markerLeft + \"px\" }}\n            ></div>\n          </div>\n          <span className=\"gauge-label\">Sharp</span>\n        </div>\n        <div className=\"gauge-note\">Detected Note: {gaugeNote}</div>\n        <div className=\"volume-control\">\n          <label htmlFor=\"volume-slider\">Volume:</label>\n          <input\n            id=\"volume-slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={volume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Tunepani;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}