{"ast":null,"code":"var _jsxFileName = \"/home/sqjl/tunepani/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drum({\n  drum,\n  toggleNote,\n  updateDrumPosition,\n  onDragStart,\n  onDragStop\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startMouse, setStartMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const containerRef = useRef(null);\n  const handleMouseDown = e => {\n    if (e.button !== 0) return; // Only respond to left-click\n    setDragging(true);\n    onDragStart(); // inform parent that dragging has started\n    setStartMouse({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setStartPos({\n      x: drum.x,\n      y: drum.y\n    });\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    // Update position continuously as the user drags\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, null, false);\n  };\n  const handleMouseUp = e => {\n    if (!dragging) return;\n    setDragging(false);\n    onDragStop(); // inform parent that dragging has stopped\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    const rect = containerRef.current ? containerRef.current.getBoundingClientRect() : null;\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, rect, true);\n  };\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    } else {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [dragging, startMouse, startPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"drum-container\",\n    style: {\n      position: \"absolute\",\n      left: drum.x,\n      top: drum.y\n    },\n    onMouseDown: handleMouseDown,\n    onClick: () => {\n      if (!dragging) toggleNote(drum);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drum-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drum-circle\",\n        children: drum.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Drum, \"RubhsumlBOkV4vqw2a/lcLWbzwY=\");\n_c = Drum;\nfunction Tunepani() {\n  _s2();\n  // Start with an empty drum set; the user can add drums via the \"+\" button.\n  const [drums, setDrums] = useState([]);\n  const [pitch, setPitch] = useState(0);\n  const [closestNote, setClosestNote] = useState(\"\");\n  const [volume, setVolume] = useState(0.3);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [savedConfigs, setSavedConfigs] = useState([]);\n  const [configName, setConfigName] = useState(\"\");\n  const [isDragging, setIsDragging] = useState(false);\n  const audioContextRef = useRef(null);\n  const oscillatorsRef = useRef({});\n  const analyserRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const trashBinRef = useRef(null);\n\n  // Sample notes and frequencies (expand as needed)\n  const notesList = [\"E3\", \"G4\", \"B4\", \"E4\", \"A3\", \"C4\"];\n  const frequencies = {\n    E3: 164.81,\n    G4: 392.0,\n    B4: 493.88,\n    E4: 329.63,\n    A3: 220.0,\n    C4: 261.63\n  };\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const audioContext = audioContextRef.current;\n      analyserRef.current = audioContext.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      microphoneRef.current = audioContext.createMediaStreamSource(stream);\n      microphoneRef.current.connect(analyserRef.current);\n      detectPitch();\n    }).catch(error => console.error(\"Microphone access error:\", error));\n    const configs = JSON.parse(localStorage.getItem(\"tunepaniConfigs\")) || [];\n    setSavedConfigs(configs);\n  }, []);\n  const detectPitch = () => {\n    const analyser = analyserRef.current;\n    if (!analyser) return;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const processPitch = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const maxVal = Math.max(...dataArray);\n      const maxIndex = dataArray.indexOf(maxVal);\n      const frequency = maxIndex * (audioContextRef.current.sampleRate / analyser.fftSize);\n      setPitch(frequency);\n      setClosestNote(findClosestNote(frequency));\n      requestAnimationFrame(processPitch);\n    };\n    processPitch();\n  };\n  const findClosestNote = frequency => {\n    if (!frequency || frequency <= 0) return \"\";\n    return Object.keys(frequencies).reduce((closest, note) => Math.abs(frequencies[note] - frequency) < Math.abs(frequencies[closest] - frequency) ? note : closest);\n  };\n\n  // Compute default position along an \"A arc\" for new drums.\n  const computeDefaultPosition = (index, total) => {\n    // Use the drum-list dimensions: assume a max width of 600px and height of 300px.\n    const containerWidth = Math.min(600, window.innerWidth - 40);\n    const containerHeight = 300;\n    const margin = 40;\n    const usableWidth = containerWidth - 2 * margin;\n    // Evenly space x coordinates\n    let x = total > 1 ? margin + usableWidth / (total - 1) * index : containerWidth / 2;\n    const centerX = containerWidth / 2;\n    // Use a quadratic function for y so that the middle drum is highest (smallest y)\n    const baseY = 50; // top of arc\n    const curvatureFactor = 0.002 * containerWidth;\n    let y = baseY + curvatureFactor * Math.pow(x - centerX, 2);\n    return {\n      x: x - 30,\n      y: y - 30\n    };\n  };\n\n  // Add a new drum. Its default position is computed along the arc.\n  const addDrum = () => {\n    const newIndex = drums.length;\n    const total = drums.length + 1;\n    const pos = computeDefaultPosition(newIndex, total);\n    const newDrum = {\n      id: Date.now(),\n      note: \"E3\",\n      x: pos.x,\n      y: pos.y\n    };\n    setDrums([...drums, newDrum]);\n  };\n  const removeDrum = drumId => {\n    setDrums(drums.filter(drum => drum.id !== drumId));\n    if (oscillatorsRef.current[drumId]) {\n      try {\n        oscillatorsRef.current[drumId].oscillator.stop(audioContextRef.current.currentTime);\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drumId];\n    }\n  };\n  const toggleNote = drum => {\n    if (!frequencies[drum.note]) return;\n    const audioContext = audioContextRef.current;\n    if (audioContext && audioContext.state === \"suspended\") {\n      audioContext.resume();\n    }\n    if (oscillatorsRef.current[drum.id]) {\n      try {\n        oscillatorsRef.current[drum.id].oscillator.stop(audioContext.currentTime);\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drum.id];\n    } else {\n      const freq = frequencies[drum.note];\n      if (!isFinite(freq)) return;\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.type = \"sine\";\n      oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n      gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n      oscillator.connect(gainNode).connect(audioContext.destination);\n      oscillator.start();\n      oscillatorsRef.current[drum.id] = {\n        oscillator,\n        gainNode\n      };\n    }\n  };\n  const updateDrumPosition = (drumId, x, y, rect, final) => {\n    if (isNaN(x) || isNaN(y)) return;\n    if (final && trashBinRef.current && rect) {\n      const trashRect = trashBinRef.current.getBoundingClientRect();\n      if (rect.right > trashRect.left && rect.left < trashRect.right && rect.bottom > trashRect.top && rect.top < trashRect.bottom) {\n        removeDrum(drumId);\n        return;\n      }\n    }\n    setDrums(prev => prev.map(d => d.id === drumId ? {\n      ...d,\n      x,\n      y\n    } : d));\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    Object.values(oscillatorsRef.current).forEach(({\n      gainNode\n    }) => gainNode.gain.setValueAtTime(newVolume, audioContextRef.current.currentTime));\n  };\n  const saveConfiguration = () => {\n    const name = configName.trim() || \"Untitled Piece\";\n    const newConfig = {\n      id: Date.now(),\n      name,\n      drums\n    };\n    const updatedConfigs = [...savedConfigs, newConfig];\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n    setConfigName(\"\");\n  };\n  const loadConfiguration = config => {\n    setDrums(config.drums);\n    setMenuOpen(false);\n  };\n  const deleteConfiguration = configId => {\n    const updatedConfigs = savedConfigs.filter(c => c.id !== configId);\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n  };\n  const handleConfigNameChange = e => setConfigName(e.target.value);\n  const onDragStart = () => setIsDragging(true);\n  const onDragStop = () => setIsDragging(false);\n\n  // Pitch gauge calculation\n  let markerLeft = 100;\n  let gaugeNote = \"\";\n  if (pitch > 0 && closestNote) {\n    const ideal = frequencies[closestNote];\n    if (ideal) {\n      let cents = 1200 * Math.log2(pitch / ideal);\n      cents = Math.max(-50, Math.min(50, cents));\n      markerLeft = 100 + cents / 50 * 100;\n      gaugeNote = closestNote;\n    }\n  }\n  const closeMenu = () => setMenuOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Tunepani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-drum-icon\",\n        onClick: addDrum,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: closeMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 20\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Save Piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Piece Name\",\n        value: configName,\n        onChange: handleConfigNameChange,\n        className: \"config-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"config-button\",\n        onClick: saveConfiguration,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pieces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"config-list\",\n        children: savedConfigs.map(config => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"config-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-button\",\n            onClick: () => loadConfiguration(config),\n            children: config.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"config-delete\",\n            onClick: () => deleteConfiguration(config.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, config.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-sidebar\",\n        onClick: () => setMenuOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drum-list\",\n      children: drums.map(drum => /*#__PURE__*/_jsxDEV(Drum, {\n        drum: drum,\n        toggleNote: toggleNote,\n        updateDrumPosition: updateDrumPosition,\n        onDragStart: onDragStart,\n        onDragStop: onDragStop\n      }, drum.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), isDragging && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-bin\",\n      ref: trashBinRef,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"trash-icon\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-label\",\n          children: \"Flat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gauge-marker\",\n            style: {\n              left: markerLeft + \"px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-label\",\n          children: \"Sharp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-note\",\n        children: [\"Detected Note: \", gaugeNote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"volume-slider\",\n          children: \"Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"volume-slider\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s2(Tunepani, \"w/qwWMNfmL50bgjLww2xQmRONbs=\");\n_c2 = Tunepani;\nexport default Tunepani;\nvar _c, _c2;\n$RefreshReg$(_c, \"Drum\");\n$RefreshReg$(_c2, \"Tunepani\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Drum","drum","toggleNote","updateDrumPosition","onDragStart","onDragStop","_s","dragging","setDragging","startMouse","setStartMouse","x","y","startPos","setStartPos","containerRef","handleMouseDown","e","button","clientX","clientY","preventDefault","handleMouseMove","dx","dy","id","handleMouseUp","rect","current","getBoundingClientRect","document","addEventListener","removeEventListener","ref","className","style","position","left","top","onMouseDown","onClick","children","note","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tunepani","_s2","drums","setDrums","pitch","setPitch","closestNote","setClosestNote","volume","setVolume","menuOpen","setMenuOpen","savedConfigs","setSavedConfigs","configName","setConfigName","isDragging","setIsDragging","audioContextRef","oscillatorsRef","analyserRef","microphoneRef","trashBinRef","notesList","frequencies","E3","G4","B4","E4","A3","C4","navigator","mediaDevices","getUserMedia","audio","then","stream","window","AudioContext","webkitAudioContext","audioContext","createAnalyser","fftSize","createMediaStreamSource","connect","detectPitch","catch","error","console","configs","JSON","parse","localStorage","getItem","analyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","processPitch","getByteFrequencyData","maxVal","Math","max","maxIndex","indexOf","frequency","sampleRate","findClosestNote","requestAnimationFrame","Object","keys","reduce","closest","abs","computeDefaultPosition","index","total","containerWidth","min","innerWidth","containerHeight","margin","usableWidth","centerX","baseY","curvatureFactor","pow","addDrum","newIndex","length","pos","newDrum","Date","now","removeDrum","drumId","filter","oscillator","stop","currentTime","state","resume","freq","isFinite","createOscillator","gainNode","createGain","type","setValueAtTime","gain","destination","start","final","isNaN","trashRect","right","bottom","prev","map","d","handleVolumeChange","newVolume","parseFloat","target","value","values","forEach","saveConfiguration","name","trim","newConfig","updatedConfigs","setItem","stringify","loadConfiguration","config","deleteConfiguration","configId","c","handleConfigNameChange","markerLeft","gaugeNote","ideal","cents","log2","closeMenu","placeholder","onChange","htmlFor","step","_c2","$RefreshReg$"],"sources":["/home/sqjl/tunepani/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction Drum({ drum, toggleNote, updateDrumPosition, onDragStart, onDragStop }) {\n  const [dragging, setDragging] = useState(false);\n  const [startMouse, setStartMouse] = useState({ x: 0, y: 0 });\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n  const containerRef = useRef(null);\n\n  const handleMouseDown = (e) => {\n    if (e.button !== 0) return; // Only respond to left-click\n    setDragging(true);\n    onDragStart(); // inform parent that dragging has started\n    setStartMouse({ x: e.clientX, y: e.clientY });\n    setStartPos({ x: drum.x, y: drum.y });\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    // Update position continuously as the user drags\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, null, false);\n  };\n\n  const handleMouseUp = (e) => {\n    if (!dragging) return;\n    setDragging(false);\n    onDragStop(); // inform parent that dragging has stopped\n    const dx = e.clientX - startMouse.x;\n    const dy = e.clientY - startMouse.y;\n    const rect = containerRef.current ? containerRef.current.getBoundingClientRect() : null;\n    updateDrumPosition(drum.id, startPos.x + dx, startPos.y + dy, rect, true);\n  };\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    } else {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [dragging, startMouse, startPos]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"drum-container\"\n      style={{\n        position: \"absolute\",\n        left: drum.x,\n        top: drum.y,\n      }}\n      onMouseDown={handleMouseDown}\n      onClick={() => {\n        if (!dragging) toggleNote(drum);\n      }}\n    >\n      <div className=\"drum-button\">\n        <div className=\"drum-circle\">{drum.note}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction Tunepani() {\n  // Start with an empty drum set; the user can add drums via the \"+\" button.\n  const [drums, setDrums] = useState([]);\n  const [pitch, setPitch] = useState(0);\n  const [closestNote, setClosestNote] = useState(\"\");\n  const [volume, setVolume] = useState(0.3);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [savedConfigs, setSavedConfigs] = useState([]);\n  const [configName, setConfigName] = useState(\"\");\n  const [isDragging, setIsDragging] = useState(false);\n\n  const audioContextRef = useRef(null);\n  const oscillatorsRef = useRef({});\n  const analyserRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const trashBinRef = useRef(null);\n\n  // Sample notes and frequencies (expand as needed)\n  const notesList = [\"E3\", \"G4\", \"B4\", \"E4\", \"A3\", \"C4\"];\n  const frequencies = {\n    E3: 164.81,\n    G4: 392.0,\n    B4: 493.88,\n    E4: 329.63,\n    A3: 220.0,\n    C4: 261.63,\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        if (!audioContextRef.current) {\n          audioContextRef.current =\n            new (window.AudioContext || window.webkitAudioContext)();\n        }\n        const audioContext = audioContextRef.current;\n        analyserRef.current = audioContext.createAnalyser();\n        analyserRef.current.fftSize = 2048;\n        microphoneRef.current = audioContext.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n        detectPitch();\n      })\n      .catch((error) => console.error(\"Microphone access error:\", error));\n\n    const configs = JSON.parse(localStorage.getItem(\"tunepaniConfigs\")) || [];\n    setSavedConfigs(configs);\n  }, []);\n\n  const detectPitch = () => {\n    const analyser = analyserRef.current;\n    if (!analyser) return;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const processPitch = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const maxVal = Math.max(...dataArray);\n      const maxIndex = dataArray.indexOf(maxVal);\n      const frequency =\n        maxIndex * (audioContextRef.current.sampleRate / analyser.fftSize);\n      setPitch(frequency);\n      setClosestNote(findClosestNote(frequency));\n      requestAnimationFrame(processPitch);\n    };\n    processPitch();\n  };\n\n  const findClosestNote = (frequency) => {\n    if (!frequency || frequency <= 0) return \"\";\n    return Object.keys(frequencies).reduce((closest, note) =>\n      Math.abs(frequencies[note] - frequency) <\n      Math.abs(frequencies[closest] - frequency)\n        ? note\n        : closest\n    );\n  };\n\n  // Compute default position along an \"A arc\" for new drums.\n  const computeDefaultPosition = (index, total) => {\n    // Use the drum-list dimensions: assume a max width of 600px and height of 300px.\n    const containerWidth = Math.min(600, window.innerWidth - 40);\n    const containerHeight = 300;\n    const margin = 40;\n    const usableWidth = containerWidth - 2 * margin;\n    // Evenly space x coordinates\n    let x = total > 1 ? margin + (usableWidth / (total - 1)) * index : containerWidth / 2;\n    const centerX = containerWidth / 2;\n    // Use a quadratic function for y so that the middle drum is highest (smallest y)\n    const baseY = 50; // top of arc\n    const curvatureFactor = 0.002 * containerWidth;\n    let y = baseY + curvatureFactor * Math.pow(x - centerX, 2);\n    return { x: x - 30, y: y - 30 };\n  };\n\n  // Add a new drum. Its default position is computed along the arc.\n  const addDrum = () => {\n    const newIndex = drums.length;\n    const total = drums.length + 1;\n    const pos = computeDefaultPosition(newIndex, total);\n    const newDrum = { id: Date.now(), note: \"E3\", x: pos.x, y: pos.y };\n    setDrums([...drums, newDrum]);\n  };\n\n  const removeDrum = (drumId) => {\n    setDrums(drums.filter((drum) => drum.id !== drumId));\n    if (oscillatorsRef.current[drumId]) {\n      try {\n        oscillatorsRef.current[drumId].oscillator.stop(\n          audioContextRef.current.currentTime\n        );\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drumId];\n    }\n  };\n\n  const toggleNote = (drum) => {\n    if (!frequencies[drum.note]) return;\n    const audioContext = audioContextRef.current;\n    if (audioContext && audioContext.state === \"suspended\") {\n      audioContext.resume();\n    }\n    if (oscillatorsRef.current[drum.id]) {\n      try {\n        oscillatorsRef.current[drum.id].oscillator.stop(audioContext.currentTime);\n      } catch (e) {\n        console.error(\"Error stopping oscillator\", e);\n      }\n      delete oscillatorsRef.current[drum.id];\n    } else {\n      const freq = frequencies[drum.note];\n      if (!isFinite(freq)) return;\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.type = \"sine\";\n      oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n      gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n      oscillator.connect(gainNode).connect(audioContext.destination);\n      oscillator.start();\n      oscillatorsRef.current[drum.id] = { oscillator, gainNode };\n    }\n  };\n\n  const updateDrumPosition = (drumId, x, y, rect, final) => {\n    if (isNaN(x) || isNaN(y)) return;\n    if (final && trashBinRef.current && rect) {\n      const trashRect = trashBinRef.current.getBoundingClientRect();\n      if (\n        rect.right > trashRect.left &&\n        rect.left < trashRect.right &&\n        rect.bottom > trashRect.top &&\n        rect.top < trashRect.bottom\n      ) {\n        removeDrum(drumId);\n        return;\n      }\n    }\n    setDrums((prev) =>\n      prev.map((d) => (d.id === drumId ? { ...d, x, y } : d))\n    );\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    Object.values(oscillatorsRef.current).forEach(({ gainNode }) =>\n      gainNode.gain.setValueAtTime(newVolume, audioContextRef.current.currentTime)\n    );\n  };\n\n  const saveConfiguration = () => {\n    const name = configName.trim() || \"Untitled Piece\";\n    const newConfig = { id: Date.now(), name, drums };\n    const updatedConfigs = [...savedConfigs, newConfig];\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n    setConfigName(\"\");\n  };\n\n  const loadConfiguration = (config) => {\n    setDrums(config.drums);\n    setMenuOpen(false);\n  };\n\n  const deleteConfiguration = (configId) => {\n    const updatedConfigs = savedConfigs.filter((c) => c.id !== configId);\n    setSavedConfigs(updatedConfigs);\n    localStorage.setItem(\"tunepaniConfigs\", JSON.stringify(updatedConfigs));\n  };\n\n  const handleConfigNameChange = (e) => setConfigName(e.target.value);\n\n  const onDragStart = () => setIsDragging(true);\n  const onDragStop = () => setIsDragging(false);\n\n  // Pitch gauge calculation\n  let markerLeft = 100;\n  let gaugeNote = \"\";\n  if (pitch > 0 && closestNote) {\n    const ideal = frequencies[closestNote];\n    if (ideal) {\n      let cents = 1200 * Math.log2(pitch / ideal);\n      cents = Math.max(-50, Math.min(50, cents));\n      markerLeft = 100 + (cents / 50) * 100;\n      gaugeNote = closestNote;\n    }\n  }\n\n  const closeMenu = () => setMenuOpen(false);\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <button className=\"menu-button\" onClick={() => setMenuOpen(!menuOpen)}>\n          ☰\n        </button>\n        <h1 className=\"title\">Tunepani</h1>\n        <button className=\"add-drum-icon\" onClick={addDrum}>\n          +\n        </button>\n      </header>\n\n      {menuOpen && <div className=\"overlay\" onClick={closeMenu}></div>}\n\n      {menuOpen && (\n        <aside className=\"sidebar\">\n          <h3>Save Piece</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Piece Name\"\n            value={configName}\n            onChange={handleConfigNameChange}\n            className=\"config-input\"\n          />\n          <button className=\"config-button\" onClick={saveConfiguration}>\n            Save\n          </button>\n          <h3>Pieces</h3>\n          <ul className=\"config-list\">\n            {savedConfigs.map((config) => (\n              <li key={config.id} className=\"config-item\">\n                <button className=\"load-button\" onClick={() => loadConfiguration(config)}>\n                  {config.name}\n                </button>\n                <span className=\"config-delete\" onClick={() => deleteConfiguration(config.id)}>\n                  x\n                </span>\n              </li>\n            ))}\n          </ul>\n          <button className=\"close-sidebar\" onClick={() => setMenuOpen(false)}>\n            Close\n          </button>\n        </aside>\n      )}\n\n      <div className=\"drum-list\">\n        {drums.map((drum) => (\n          <Drum\n            key={drum.id}\n            drum={drum}\n            toggleNote={toggleNote}\n            updateDrumPosition={updateDrumPosition}\n            onDragStart={onDragStart}\n            onDragStop={onDragStop}\n          />\n        ))}\n      </div>\n\n      {isDragging && (\n        <div className=\"trash-bin\" ref={trashBinRef}>\n          <span className=\"trash-icon\">🗑️</span>\n        </div>\n      )}\n\n      <main className=\"main-content\">\n        <div className=\"gauge-container\">\n          <span className=\"gauge-label\">Flat</span>\n          <div className=\"gauge\">\n            <div className=\"gauge-marker\" style={{ left: markerLeft + \"px\" }}></div>\n          </div>\n          <span className=\"gauge-label\">Sharp</span>\n        </div>\n        <div className=\"gauge-note\">Detected Note: {gaugeNote}</div>\n        <div className=\"volume-control\">\n          <label htmlFor=\"volume-slider\">Volume:</label>\n          <input\n            id=\"volume-slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={volume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Tunepani;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}